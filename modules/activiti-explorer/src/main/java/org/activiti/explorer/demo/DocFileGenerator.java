package org.activiti.explorer.demo;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.activiti.engine.ActivitiException;
import org.activiti.engine.delegate.DelegateExecution;
import org.activiti.engine.delegate.Expression;
import org.activiti.engine.delegate.JavaDelegate;
import org.activiti.engine.impl.util.IoUtil;
import org.activiti.explorer.demo.cmis.CmisUtil;
import org.apache.chemistry.opencmis.client.api.Document;
import org.apache.chemistry.opencmis.client.api.Folder;
import org.apache.chemistry.opencmis.client.api.Session;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;

public class DocFileGenerator implements JavaDelegate {

private Expression parentFolder;
private Expression docText;
private Expression docName;
private Session session;
private String parentFolderName;
private static final String ALFRESCO_CMIS_URL = "http://alfrescotest.consorzio21.it:8080/alfresco/service/cmis";
private static final String ALFRESCO_ADMIN_PASSWORD = "tubonero.99";

  @Override
	public void execute(DelegateExecution execution) throws Exception {
	  Boolean isArchived = false;
      XWPFDocument doc = new XWPFDocument();
      XWPFParagraph paragraph = doc.createParagraph();
      XWPFRun run = paragraph.createRun(); // Il Run è una porzione di testo con le stesse caratteristiche
      run.setText("Questa è una determinazione");
      run.setFontSize(20);
      doc.write(new FileOutputStream(new File("nomeFile" + ".doc")));
      doc.write(new FileOutputStream(new File("nomeFile" + ".docx")));
  	  Folder archiveFolder;

      ByteArrayOutputStream customerSheetOutputStream = new ByteArrayOutputStream(1024);
      try {
    	  
			// create a new CMIS session
			this.createCmisSession();
			// set parent folder name
			this.parentFolderName = (String)parentFolder.getValue(execution);
			// set a new folder name for current process instance

			archiveFolder = CmisUtil.getFolder(session, this.parentFolderName );
    	  
    	  
              doc.write(customerSheetOutputStream);
              byte[] content = customerSheetOutputStream.toByteArray();
          
				Document aDocument = this.saveDocumentToFolder(
						content,
						archiveFolder.getId(), "documento" , "_" + "." + "doc",
						"application/msword");
              
				if (aDocument == null) {
					isArchived = false;
					}else{
					isArchived = true;
					}
   
      } catch(Exception e) {
          throw new ActivitiException("Error storing document generated by using POI in CMIS repository", e);
      } finally {
          try {
                      customerSheetOutputStream.close();
                   
          } catch(Exception e) {}
      }

      
      execution.setVariable("isArchived", isArchived);
	}
  
	public Document saveDocumentToFolder(byte[] documentStreamByteArray,
			String folderId, String name, String fileSuffix, String mimeType) {
		try {
			byte[] content = documentStreamByteArray;
			Folder folder = (Folder) session.getObject(folderId);
			return CmisUtil.createDocument(session, folder, name + "_"
					+ fileSuffix, mimeType, content);
		} catch (Exception e) {
			throw new ActivitiException(
					"Error storing document in CMIS repository", e);
		} finally {
			try {
				// documentStreamByteArray.close();
			} catch (Exception e) {
			}
		}
	}
	public void createCmisSession() {
		session = CmisUtil.createCmisSession("admin", ALFRESCO_ADMIN_PASSWORD,
				ALFRESCO_CMIS_URL);
	}


}
